import Head from "next/head";
import { Inter } from "@next/font/google";
const inter = Inter({ subsets: ["latin"] });
import style from "../styles/Home.module.css";
import { headerData } from "./datas/headerData";
import { useState } from "react";

export default function Home() {
  type post = {
    name: string;
    body: string;
    goodFlag: boolean;
    badFlag: boolean;
  };

  const [inputPostText, setInputPostText] = useState("");
  const [inputUsernameText, setInputUsernameText] = useState<string>("");

  const [posts, setPosts] = useState<post[]>([
    {
      name: "aaaaa",
      body: "投稿内容1",
      goodFlag: false,
      badFlag: false,
    },
    {
      name: "bbbbb",
      body: "投稿内容2",
      goodFlag: false,
      badFlag: false,
    },
    {
      name: "cccccc",
      body: "<a href='https://openai.com/blog/chatgpt'>qqqq</a>",
      goodFlag: false,
      badFlag: false,
    },
  ]);

  const onClickGoodButton = (targetIndex: number) => {
    // 任意のいいね数のみ変更
    setPosts((prev) => {
      const newPosts: post[] = prev.map((value, index) => {
        if (targetIndex === index) {
          return { ...value, goodFlag: !value.goodFlag, badFlag: false };
        } else {
          return value;
        }
      });

      return newPosts;
    });

    // console.log(posts[targetIndex].goodFlag);
  };
  const onClickBadButton = (targetIndex: number) => {
    // 任意のいいね数のみ変更
    setPosts((prev) => {
      const newPosts: post[] = prev.map((value, index) => {
        if (targetIndex === index) {
          return { ...value, goodFlag: false, badFlag: !value.badFlag };
        } else {
          return value;
        }
      });

      return newPosts;
    });

    console.log(posts[targetIndex].goodFlag);
  };

  const onClickPostButton = () => {
    // console.log(inputPostText);
    // console.log(inputUsernameText);
    setPosts((prev) => [
      ...prev,
      {
        name: inputUsernameText,
        body: inputPostText,
        goodFlag: false,
        badFlag: false,
      },
    ]);
    setInputPostText("");
    setInputUsernameText("");
  };

  // setTimeout(()=>window.location.href = "https://openai.com/blog/chatgpt",3000)

  return (
    <>
      <Head>
        <title>XSS practice</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={style.body}>
        <div className={style.header}>
          <ul className={style.ul}>
            {headerData.map((data, index) => (
              <li className={style.headerListContent} key={index}>
                {data.title}
              </li>
            ))}
          </ul>
        </div>

        <div className={style.main}>
          <div className={style.mainContents}>
            <h1 className={style.boardTitle}>掲示板</h1>

            {posts.map((post, index) => (
              <div className={style.Postcontent} key={index}>
                <div className={style.userInfo}>
                  <img></img>
                  <p>{post.name}</p>
                </div>

                <div className={style.postContent}>
                  <div
                    className={style.postText}
                    // dangerouslySetInnerHTML={{ __html: post.body }}

                    // dangerouslySetInnerHTML={{
                    //   __html: `<script>setTimeout(()=>window.location.href = "https://openai.com/blog/chatgpt",3000);</script>`,
                    // }}
                    // dangerouslySetInnerHTML={{
                    //   __html: `<button onclick="alert('attack from event handler')">Click Me</button>
                    // `,
                    // }}
                  />
                  {post.body}
                </div>

                <div className={style.reactionButton}>
                  <button
                    className={style.goodButton}
                    style={{
                      backgroundColor: posts[index].goodFlag ? "red" : "",
                    }}
                    onClick={() => onClickGoodButton(index)}
                  >
                    good
                  </button>
                  <button
                    className={style.badButton}
                    style={{
                      backgroundColor: posts[index].badFlag ? "blue" : "",
                    }}
                    onClick={() => onClickBadButton(index)}
                  >
                    bad...
                  </button>
                </div>
              </div>
            ))}

            <div className={style.inputContents}>
              <div>
                <input
                  className={style.inputUsernameText}
                  value={inputUsernameText}
                  placeholder="ユーザー名入力"
                  onChange={(e) => setInputUsernameText(e.target.value)}
                ></input>
              </div>
              <div>
                <textarea
                  className={style.inputPostText}
                  rows={5}
                  cols={50}
                  value={inputPostText}
                  placeholder="投稿内容を入力"
                  onChange={(e) => setInputPostText(e.target.value)}
                ></textarea>
              </div>
              <button className={style.PostButton} onClick={onClickPostButton}>
                投稿
              </button>
            </div>
          </div>
        </div>

        <footer></footer>
      </div>
    </>
  );
}
