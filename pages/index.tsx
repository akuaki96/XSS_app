import Head from "next/head";
import style from "../styles/Home.module.css";
import { headerData } from "./datas/headerData";
import { useState } from "react";
import Link from "next/link";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faThumbsUp, faThumbsDown } from "@fortawesome/free-solid-svg-icons";

export default function Home() {
  type post = {
    name: string;
    time: string;
    body: any;
    goodFlag: boolean;
    badFlag: boolean;
  };

  const [inputPostText, setInputPostText] = useState("");
  const [inputUsernameText, setInputUsernameText] = useState<string>("");
  // const [postTime, setPostTime] = useState<string>();

  const [posts, setPosts] = useState<post[]>([
    {
      name: "名無しさん１",
      time: "投稿日時 2023/5/14 22:02:53",
      body: "投稿内容１投稿内容１投稿内容１投稿内容１投稿内容１投稿内容１投稿内容１投稿内容１投稿内容１",
      goodFlag: false,
      badFlag: false,
    },
    {
      name: "名無しさん２",
      time: "投稿日時 2023/5/15 22:02:53",
      body: "投稿内容２投稿内容２投稿内容２投稿内容２投稿内容２投稿内容２投稿内容２投稿内容２投稿内容２",
      goodFlag: false,
      badFlag: false,
    },
    {
      name: "名無しさん３",
      time: "投稿日時 2023/5/16 02:02:53",
      body: "<a href='https://openai.com/blog/chatgpt'>qqqq</a>",
      goodFlag: false,
      badFlag: false,
    },
    // {
    //   name: "名無しさん４",
    //   time: "投稿日時 2023/5/16 02:02:53",
    //   body: "<script>setTimeout(()=>window.location.href = 'https://openai.com/blog/chatgpt',3000);</script>",
    //   goodFlag: false,
    //   badFlag: false,
    // },
    // {
    //   name: "名無しさん４",
    //   time: "投稿日時 2023/5/16 02:02:53",
    //   body: "<script>setTimeout(()=>window.location.href = './dangerpage',3000);</script>",
    //   goodFlag: false,
    //   badFlag: false,
    // },
  ]);

  <script>window.location.href = 'https://openai.com/blog/chatgpt';</script>;
  console.log(posts);

  const onClickGoodButton = (targetIndex: number) => {
    // 任意のいいね数のみ変更
    setPosts((prev) => {
      const newPosts: post[] = prev.map((value, index) => {
        if (targetIndex === index) {
          return { ...value, goodFlag: !value.goodFlag, badFlag: false };
        } else {
          return value;
        }
      });

      return newPosts;
    });

    // console.log(posts[targetIndex].goodFlag);
  };

  const onClickBadButton = (targetIndex: number) => {
    // 任意のいいね数のみ変更
    setPosts((prev) => {
      const newPosts: post[] = prev.map((value, index) => {
        if (targetIndex === index) {
          return { ...value, goodFlag: false, badFlag: !value.badFlag };
        } else {
          return value;
        }
      });

      return newPosts;
    });
  };

  // 投稿ボタンの処理
  const onClickPostButton = () => {
    // 投稿時間取得
    const date = new Date();
    const hours = date.getHours().toString().padStart(2, "0");
    const minutes = date.getMinutes().toString().padStart(2, "0");
    const seconds = date.getSeconds().toString().padStart(2, "0");

    const postTime = `投稿日時  ${date.getFullYear()}/${
      date.getMonth() + 1
    }/${date.getDate()}  ${hours}:${minutes}:${seconds}`;

    const scriptRegex = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi;
    const inputPostTextWithScript = inputPostText.replace(
      scriptRegex,
      (match) => Function(match.replace(/<script>|<\/script>/gi, ""))()
    );

    setPosts((prev) => [
      ...prev,
      {
        name: inputUsernameText === "" ? "名無しさん" : inputUsernameText,
        time: postTime,
        body: inputPostTextWithScript,
        goodFlag: false,
        badFlag: false,
      },
    ]);
    setInputPostText("");
    setInputUsernameText("");
  };

  // setTimeout(()=>window.location.href = "https://openai.com/blog/chatgpt",3000)

  return (
    <>
      <Head>
        <title>XSS practice</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={style.body}>
        <div className={style.header}>
          <div className={style.headerContents}>
            <ul className={style.ul}>
              {headerData.map((data, index) => (
                <li className={style.headerListContent} key={index}>
                  <Link href={data.link} className={style.link}>
                    {data.title}
                  </Link>
                </li>
              ))}
            </ul>
          </div>
        </div>

        <div className={style.main}>
          <div className={style.mainContents}>
            <h1 className={style.boardTitle}>掲示板</h1>

            {posts.map((post, index) => (
              <div className={style.postArea} key={index}>
                <div className={style.postContents}>
                  <p className={style.userName}>
                    {post.name}
                    <span className={style.postTime}>{post.time}</span>
                  </p>

                  <div className={style.postText}>
                    <div
                      className={style.postText}
                      dangerouslySetInnerHTML={{ __html: post.body }}

                      // dangerouslySetInnerHTML={{
                      //   __html: `<script>setTimeout(()=>window.location.href = "https://openai.com/blog/chatgpt",3000);</script>`,
                      // }}
                      // dangerouslySetInnerHTML={{
                      //   __html: `<button onclick="alert('attack from event handler')">Click Me</button>
                      // `,
                      // }}
                    />
                    {/* {post.body} */}
                  </div>

                  <div className={style.reactionButtonArea}>
                    <button
                      className={style.reactionButton}
                      onClick={() => onClickGoodButton(index)}
                    >
                      <FontAwesomeIcon
                        icon={faThumbsUp}
                        className={style.reactionButtonIcon}
                        style={{
                          color: posts[index].goodFlag
                            ? "rgb(93, 93, 93)"
                            : "#d7d7d7",
                        }}
                      />
                    </button>

                    <button
                      className={style.reactionButton}
                      onClick={() => onClickBadButton(index)}
                    >
                      <FontAwesomeIcon
                        icon={faThumbsDown}
                        className={style.reactionButtonIcon}
                        style={{
                          color: posts[index].badFlag
                            ? "rgb(93, 93, 93)"
                            : "#d7d7d7",
                        }}
                      />
                    </button>
                  </div>
                </div>
              </div>
            ))}

            <div className={style.inputContents}>
              <div className={style.inputUsernameArea}>
                <input
                  className={style.inputUsernameText}
                  value={inputUsernameText}
                  placeholder="ユーザー名入力"
                  onChange={(e) => setInputUsernameText(e.target.value)}
                ></input>
              </div>
              <div className={style.inputPostTextArea}>
                <textarea
                  className={style.inputPostText}
                  rows={5}
                  cols={50}
                  value={inputPostText}
                  placeholder="投稿内容を入力"
                  onChange={(e) => setInputPostText(e.target.value)}
                ></textarea>
              </div>
              <div className={style.postButtonArea}>
                <button
                  className={style.postButton}
                  onClick={onClickPostButton}
                >
                  投稿
                </button>
              </div>
            </div>
          </div>
        </div>

        <footer></footer>
      </div>
    </>
  );
}
